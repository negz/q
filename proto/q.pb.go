// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: q.proto

/*
	Package proto is a generated protocol buffer package.

	It is generated from these files:
		q.proto

	It has these top-level messages:
		NewQueueRequest
		NewQueueResponse
		GetQueueRequest
		GetQueueResponse
		ListQueuesRequest
		ListQueuesResponse
		DeleteQueueRequest
		DeleteQueueResponse
		AddQueueTagRequest
		AddQueueTagResponse
		DeleteQueueTagRequest
		DeleteQueueTagResponse
		AddRequest
		AddResponse
		PopRequest
		PopResponse
		PeekRequest
		PeekResponse
		Tag
		Metadata
		NewMessage
		Message
		Queue
*/
package proto

import proto1 "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import strconv "strconv"

import strings "strings"
import reflect "reflect"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Queue_Store int32

const (
	UNKNOWN Queue_Store = 0
	MEMORY  Queue_Store = 1
)

var Queue_Store_name = map[int32]string{
	0: "UNKNOWN",
	1: "MEMORY",
}
var Queue_Store_value = map[string]int32{
	"UNKNOWN": 0,
	"MEMORY":  1,
}

func (Queue_Store) EnumDescriptor() ([]byte, []int) { return fileDescriptorQ, []int{22, 0} }

type NewQueueRequest struct {
	Store Queue_Store `protobuf:"varint,1,opt,name=store,proto3,enum=proto.Queue_Store" json:"store,omitempty"`
	Limit int64       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Tags  []*Tag      `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
}

func (m *NewQueueRequest) Reset()                    { *m = NewQueueRequest{} }
func (*NewQueueRequest) ProtoMessage()               {}
func (*NewQueueRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{0} }

func (m *NewQueueRequest) GetStore() Queue_Store {
	if m != nil {
		return m.Store
	}
	return UNKNOWN
}

func (m *NewQueueRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *NewQueueRequest) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type NewQueueResponse struct {
	Queue *Queue `protobuf:"bytes,1,opt,name=queue" json:"queue,omitempty"`
}

func (m *NewQueueResponse) Reset()                    { *m = NewQueueResponse{} }
func (*NewQueueResponse) ProtoMessage()               {}
func (*NewQueueResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{1} }

func (m *NewQueueResponse) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type GetQueueRequest struct {
	QueueId string `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
}

func (m *GetQueueRequest) Reset()                    { *m = GetQueueRequest{} }
func (*GetQueueRequest) ProtoMessage()               {}
func (*GetQueueRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{2} }

func (m *GetQueueRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

type GetQueueResponse struct {
	Queue *Queue `protobuf:"bytes,1,opt,name=queue" json:"queue,omitempty"`
}

func (m *GetQueueResponse) Reset()                    { *m = GetQueueResponse{} }
func (*GetQueueResponse) ProtoMessage()               {}
func (*GetQueueResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{3} }

func (m *GetQueueResponse) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type ListQueuesRequest struct {
}

func (m *ListQueuesRequest) Reset()                    { *m = ListQueuesRequest{} }
func (*ListQueuesRequest) ProtoMessage()               {}
func (*ListQueuesRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{4} }

type ListQueuesResponse struct {
	Queues []*Queue `protobuf:"bytes,1,rep,name=queues" json:"queues,omitempty"`
}

func (m *ListQueuesResponse) Reset()                    { *m = ListQueuesResponse{} }
func (*ListQueuesResponse) ProtoMessage()               {}
func (*ListQueuesResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{5} }

func (m *ListQueuesResponse) GetQueues() []*Queue {
	if m != nil {
		return m.Queues
	}
	return nil
}

type DeleteQueueRequest struct {
	QueueId string `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
}

func (m *DeleteQueueRequest) Reset()                    { *m = DeleteQueueRequest{} }
func (*DeleteQueueRequest) ProtoMessage()               {}
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{6} }

func (m *DeleteQueueRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

type DeleteQueueResponse struct {
}

func (m *DeleteQueueResponse) Reset()                    { *m = DeleteQueueResponse{} }
func (*DeleteQueueResponse) ProtoMessage()               {}
func (*DeleteQueueResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{7} }

type AddQueueTagRequest struct {
	QueueId string `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Tag     *Tag   `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
}

func (m *AddQueueTagRequest) Reset()                    { *m = AddQueueTagRequest{} }
func (*AddQueueTagRequest) ProtoMessage()               {}
func (*AddQueueTagRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{8} }

func (m *AddQueueTagRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

func (m *AddQueueTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type AddQueueTagResponse struct {
}

func (m *AddQueueTagResponse) Reset()                    { *m = AddQueueTagResponse{} }
func (*AddQueueTagResponse) ProtoMessage()               {}
func (*AddQueueTagResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{9} }

type DeleteQueueTagRequest struct {
	QueueId string `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Tag     *Tag   `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
}

func (m *DeleteQueueTagRequest) Reset()                    { *m = DeleteQueueTagRequest{} }
func (*DeleteQueueTagRequest) ProtoMessage()               {}
func (*DeleteQueueTagRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{10} }

func (m *DeleteQueueTagRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

func (m *DeleteQueueTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type DeleteQueueTagResponse struct {
}

func (m *DeleteQueueTagResponse) Reset()                    { *m = DeleteQueueTagResponse{} }
func (*DeleteQueueTagResponse) ProtoMessage()               {}
func (*DeleteQueueTagResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{11} }

type AddRequest struct {
	QueueId string      `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Message *NewMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{12} }

func (m *AddRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

func (m *AddRequest) GetMessage() *NewMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type AddResponse struct {
	Message *Message `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *AddResponse) Reset()                    { *m = AddResponse{} }
func (*AddResponse) ProtoMessage()               {}
func (*AddResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{13} }

func (m *AddResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type PopRequest struct {
	QueueId string `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
}

func (m *PopRequest) Reset()                    { *m = PopRequest{} }
func (*PopRequest) ProtoMessage()               {}
func (*PopRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{14} }

func (m *PopRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

type PopResponse struct {
	Message *Message `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PopResponse) Reset()                    { *m = PopResponse{} }
func (*PopResponse) ProtoMessage()               {}
func (*PopResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{15} }

func (m *PopResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type PeekRequest struct {
	QueueId string `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
}

func (m *PeekRequest) Reset()                    { *m = PeekRequest{} }
func (*PeekRequest) ProtoMessage()               {}
func (*PeekRequest) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{16} }

func (m *PeekRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

type PeekResponse struct {
	Message *Message `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PeekResponse) Reset()                    { *m = PeekResponse{} }
func (*PeekResponse) ProtoMessage()               {}
func (*PeekResponse) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{17} }

func (m *PeekResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type Tag struct {
	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{18} }

func (m *Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Metadata struct {
	Id      string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=created" json:"created,omitempty"`
	Tags    []*Tag                      `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{19} }

func (m *Metadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Metadata) GetCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Metadata) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

// A NewMessage is the user-writable subset of a Message. We could use Message
// for new messages and just ignore any ID or create times the caller sent, but
// doing so would cause the grpc-gateway swagger spec generator to generate a
// misleading input.
type NewMessage struct {
	Tags    []*Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *NewMessage) Reset()                    { *m = NewMessage{} }
func (*NewMessage) ProtoMessage()               {}
func (*NewMessage) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{20} }

func (m *NewMessage) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NewMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Message struct {
	Meta    *Metadata `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Payload []byte    `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{21} }

func (m *Message) GetMeta() *Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Queue struct {
	Meta  *Metadata   `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Store Queue_Store `protobuf:"varint,2,opt,name=store,proto3,enum=proto.Queue_Store" json:"store,omitempty"`
}

func (m *Queue) Reset()                    { *m = Queue{} }
func (*Queue) ProtoMessage()               {}
func (*Queue) Descriptor() ([]byte, []int) { return fileDescriptorQ, []int{22} }

func (m *Queue) GetMeta() *Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Queue) GetStore() Queue_Store {
	if m != nil {
		return m.Store
	}
	return UNKNOWN
}

func init() {
	proto1.RegisterType((*NewQueueRequest)(nil), "proto.NewQueueRequest")
	golang_proto.RegisterType((*NewQueueRequest)(nil), "proto.NewQueueRequest")
	proto1.RegisterType((*NewQueueResponse)(nil), "proto.NewQueueResponse")
	golang_proto.RegisterType((*NewQueueResponse)(nil), "proto.NewQueueResponse")
	proto1.RegisterType((*GetQueueRequest)(nil), "proto.GetQueueRequest")
	golang_proto.RegisterType((*GetQueueRequest)(nil), "proto.GetQueueRequest")
	proto1.RegisterType((*GetQueueResponse)(nil), "proto.GetQueueResponse")
	golang_proto.RegisterType((*GetQueueResponse)(nil), "proto.GetQueueResponse")
	proto1.RegisterType((*ListQueuesRequest)(nil), "proto.ListQueuesRequest")
	golang_proto.RegisterType((*ListQueuesRequest)(nil), "proto.ListQueuesRequest")
	proto1.RegisterType((*ListQueuesResponse)(nil), "proto.ListQueuesResponse")
	golang_proto.RegisterType((*ListQueuesResponse)(nil), "proto.ListQueuesResponse")
	proto1.RegisterType((*DeleteQueueRequest)(nil), "proto.DeleteQueueRequest")
	golang_proto.RegisterType((*DeleteQueueRequest)(nil), "proto.DeleteQueueRequest")
	proto1.RegisterType((*DeleteQueueResponse)(nil), "proto.DeleteQueueResponse")
	golang_proto.RegisterType((*DeleteQueueResponse)(nil), "proto.DeleteQueueResponse")
	proto1.RegisterType((*AddQueueTagRequest)(nil), "proto.AddQueueTagRequest")
	golang_proto.RegisterType((*AddQueueTagRequest)(nil), "proto.AddQueueTagRequest")
	proto1.RegisterType((*AddQueueTagResponse)(nil), "proto.AddQueueTagResponse")
	golang_proto.RegisterType((*AddQueueTagResponse)(nil), "proto.AddQueueTagResponse")
	proto1.RegisterType((*DeleteQueueTagRequest)(nil), "proto.DeleteQueueTagRequest")
	golang_proto.RegisterType((*DeleteQueueTagRequest)(nil), "proto.DeleteQueueTagRequest")
	proto1.RegisterType((*DeleteQueueTagResponse)(nil), "proto.DeleteQueueTagResponse")
	golang_proto.RegisterType((*DeleteQueueTagResponse)(nil), "proto.DeleteQueueTagResponse")
	proto1.RegisterType((*AddRequest)(nil), "proto.AddRequest")
	golang_proto.RegisterType((*AddRequest)(nil), "proto.AddRequest")
	proto1.RegisterType((*AddResponse)(nil), "proto.AddResponse")
	golang_proto.RegisterType((*AddResponse)(nil), "proto.AddResponse")
	proto1.RegisterType((*PopRequest)(nil), "proto.PopRequest")
	golang_proto.RegisterType((*PopRequest)(nil), "proto.PopRequest")
	proto1.RegisterType((*PopResponse)(nil), "proto.PopResponse")
	golang_proto.RegisterType((*PopResponse)(nil), "proto.PopResponse")
	proto1.RegisterType((*PeekRequest)(nil), "proto.PeekRequest")
	golang_proto.RegisterType((*PeekRequest)(nil), "proto.PeekRequest")
	proto1.RegisterType((*PeekResponse)(nil), "proto.PeekResponse")
	golang_proto.RegisterType((*PeekResponse)(nil), "proto.PeekResponse")
	proto1.RegisterType((*Tag)(nil), "proto.Tag")
	golang_proto.RegisterType((*Tag)(nil), "proto.Tag")
	proto1.RegisterType((*Metadata)(nil), "proto.Metadata")
	golang_proto.RegisterType((*Metadata)(nil), "proto.Metadata")
	proto1.RegisterType((*NewMessage)(nil), "proto.NewMessage")
	golang_proto.RegisterType((*NewMessage)(nil), "proto.NewMessage")
	proto1.RegisterType((*Message)(nil), "proto.Message")
	golang_proto.RegisterType((*Message)(nil), "proto.Message")
	proto1.RegisterType((*Queue)(nil), "proto.Queue")
	golang_proto.RegisterType((*Queue)(nil), "proto.Queue")
	proto1.RegisterEnum("proto.Queue_Store", Queue_Store_name, Queue_Store_value)
	golang_proto.RegisterEnum("proto.Queue_Store", Queue_Store_name, Queue_Store_value)
}
func (x Queue_Store) String() string {
	s, ok := Queue_Store_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *NewQueueRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&proto.NewQueueRequest{")
	s = append(s, "Store: "+fmt.Sprintf("%#v", this.Store)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.Tags != nil {
		s = append(s, "Tags: "+fmt.Sprintf("%#v", this.Tags)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *NewQueueResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.NewQueueResponse{")
	if this.Queue != nil {
		s = append(s, "Queue: "+fmt.Sprintf("%#v", this.Queue)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetQueueRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.GetQueueRequest{")
	s = append(s, "QueueId: "+fmt.Sprintf("%#v", this.QueueId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetQueueResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.GetQueueResponse{")
	if this.Queue != nil {
		s = append(s, "Queue: "+fmt.Sprintf("%#v", this.Queue)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListQueuesRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&proto.ListQueuesRequest{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListQueuesResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.ListQueuesResponse{")
	if this.Queues != nil {
		s = append(s, "Queues: "+fmt.Sprintf("%#v", this.Queues)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteQueueRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.DeleteQueueRequest{")
	s = append(s, "QueueId: "+fmt.Sprintf("%#v", this.QueueId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteQueueResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&proto.DeleteQueueResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddQueueTagRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.AddQueueTagRequest{")
	s = append(s, "QueueId: "+fmt.Sprintf("%#v", this.QueueId)+",\n")
	if this.Tag != nil {
		s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddQueueTagResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&proto.AddQueueTagResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteQueueTagRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.DeleteQueueTagRequest{")
	s = append(s, "QueueId: "+fmt.Sprintf("%#v", this.QueueId)+",\n")
	if this.Tag != nil {
		s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteQueueTagResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&proto.DeleteQueueTagResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.AddRequest{")
	s = append(s, "QueueId: "+fmt.Sprintf("%#v", this.QueueId)+",\n")
	if this.Message != nil {
		s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.AddResponse{")
	if this.Message != nil {
		s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PopRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.PopRequest{")
	s = append(s, "QueueId: "+fmt.Sprintf("%#v", this.QueueId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PopResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.PopResponse{")
	if this.Message != nil {
		s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PeekRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.PeekRequest{")
	s = append(s, "QueueId: "+fmt.Sprintf("%#v", this.QueueId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PeekResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.PeekResponse{")
	if this.Message != nil {
		s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Tag) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.Tag{")
	s = append(s, "Key: "+fmt.Sprintf("%#v", this.Key)+",\n")
	s = append(s, "Value: "+fmt.Sprintf("%#v", this.Value)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Metadata) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&proto.Metadata{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Created != nil {
		s = append(s, "Created: "+fmt.Sprintf("%#v", this.Created)+",\n")
	}
	if this.Tags != nil {
		s = append(s, "Tags: "+fmt.Sprintf("%#v", this.Tags)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *NewMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.NewMessage{")
	if this.Tags != nil {
		s = append(s, "Tags: "+fmt.Sprintf("%#v", this.Tags)+",\n")
	}
	s = append(s, "Payload: "+fmt.Sprintf("%#v", this.Payload)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Message) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.Message{")
	if this.Meta != nil {
		s = append(s, "Meta: "+fmt.Sprintf("%#v", this.Meta)+",\n")
	}
	s = append(s, "Payload: "+fmt.Sprintf("%#v", this.Payload)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Queue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.Queue{")
	if this.Meta != nil {
		s = append(s, "Meta: "+fmt.Sprintf("%#v", this.Meta)+",\n")
	}
	s = append(s, "Store: "+fmt.Sprintf("%#v", this.Store)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringQ(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Q service

type QClient interface {
	ListQueues(ctx context.Context, in *ListQueuesRequest, opts ...grpc.CallOption) (*ListQueuesResponse, error)
	NewQueue(ctx context.Context, in *NewQueueRequest, opts ...grpc.CallOption) (*NewQueueResponse, error)
	GetQueue(ctx context.Context, in *GetQueueRequest, opts ...grpc.CallOption) (*GetQueueResponse, error)
	DeleteQueue(ctx context.Context, in *DeleteQueueRequest, opts ...grpc.CallOption) (*DeleteQueueResponse, error)
	AddQueueTag(ctx context.Context, in *AddQueueTagRequest, opts ...grpc.CallOption) (*AddQueueTagResponse, error)
	DeleteQueueTag(ctx context.Context, in *DeleteQueueTagRequest, opts ...grpc.CallOption) (*DeleteQueueTagResponse, error)
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Pop(ctx context.Context, in *PopRequest, opts ...grpc.CallOption) (*PopResponse, error)
	Peek(ctx context.Context, in *PeekRequest, opts ...grpc.CallOption) (*PeekResponse, error)
}

type qClient struct {
	cc *grpc.ClientConn
}

func NewQClient(cc *grpc.ClientConn) QClient {
	return &qClient{cc}
}

func (c *qClient) ListQueues(ctx context.Context, in *ListQueuesRequest, opts ...grpc.CallOption) (*ListQueuesResponse, error) {
	out := new(ListQueuesResponse)
	err := grpc.Invoke(ctx, "/proto.Q/ListQueues", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qClient) NewQueue(ctx context.Context, in *NewQueueRequest, opts ...grpc.CallOption) (*NewQueueResponse, error) {
	out := new(NewQueueResponse)
	err := grpc.Invoke(ctx, "/proto.Q/NewQueue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qClient) GetQueue(ctx context.Context, in *GetQueueRequest, opts ...grpc.CallOption) (*GetQueueResponse, error) {
	out := new(GetQueueResponse)
	err := grpc.Invoke(ctx, "/proto.Q/GetQueue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qClient) DeleteQueue(ctx context.Context, in *DeleteQueueRequest, opts ...grpc.CallOption) (*DeleteQueueResponse, error) {
	out := new(DeleteQueueResponse)
	err := grpc.Invoke(ctx, "/proto.Q/DeleteQueue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qClient) AddQueueTag(ctx context.Context, in *AddQueueTagRequest, opts ...grpc.CallOption) (*AddQueueTagResponse, error) {
	out := new(AddQueueTagResponse)
	err := grpc.Invoke(ctx, "/proto.Q/AddQueueTag", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qClient) DeleteQueueTag(ctx context.Context, in *DeleteQueueTagRequest, opts ...grpc.CallOption) (*DeleteQueueTagResponse, error) {
	out := new(DeleteQueueTagResponse)
	err := grpc.Invoke(ctx, "/proto.Q/DeleteQueueTag", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := grpc.Invoke(ctx, "/proto.Q/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qClient) Pop(ctx context.Context, in *PopRequest, opts ...grpc.CallOption) (*PopResponse, error) {
	out := new(PopResponse)
	err := grpc.Invoke(ctx, "/proto.Q/Pop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qClient) Peek(ctx context.Context, in *PeekRequest, opts ...grpc.CallOption) (*PeekResponse, error) {
	out := new(PeekResponse)
	err := grpc.Invoke(ctx, "/proto.Q/Peek", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Q service

type QServer interface {
	ListQueues(context.Context, *ListQueuesRequest) (*ListQueuesResponse, error)
	NewQueue(context.Context, *NewQueueRequest) (*NewQueueResponse, error)
	GetQueue(context.Context, *GetQueueRequest) (*GetQueueResponse, error)
	DeleteQueue(context.Context, *DeleteQueueRequest) (*DeleteQueueResponse, error)
	AddQueueTag(context.Context, *AddQueueTagRequest) (*AddQueueTagResponse, error)
	DeleteQueueTag(context.Context, *DeleteQueueTagRequest) (*DeleteQueueTagResponse, error)
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Pop(context.Context, *PopRequest) (*PopResponse, error)
	Peek(context.Context, *PeekRequest) (*PeekResponse, error)
}

func RegisterQServer(s *grpc.Server, srv QServer) {
	s.RegisterService(&_Q_serviceDesc, srv)
}

func _Q_ListQueues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQueuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).ListQueues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/ListQueues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).ListQueues(ctx, req.(*ListQueuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Q_NewQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).NewQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/NewQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).NewQueue(ctx, req.(*NewQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Q_GetQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).GetQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/GetQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).GetQueue(ctx, req.(*GetQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Q_DeleteQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).DeleteQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/DeleteQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).DeleteQueue(ctx, req.(*DeleteQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Q_AddQueueTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddQueueTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).AddQueueTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/AddQueueTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).AddQueueTag(ctx, req.(*AddQueueTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Q_DeleteQueueTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQueueTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).DeleteQueueTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/DeleteQueueTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).DeleteQueueTag(ctx, req.(*DeleteQueueTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Q_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Q_Pop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).Pop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/Pop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).Pop(ctx, req.(*PopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Q_Peek_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeekRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).Peek(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Q/Peek",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).Peek(ctx, req.(*PeekRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Q_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Q",
	HandlerType: (*QServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListQueues",
			Handler:    _Q_ListQueues_Handler,
		},
		{
			MethodName: "NewQueue",
			Handler:    _Q_NewQueue_Handler,
		},
		{
			MethodName: "GetQueue",
			Handler:    _Q_GetQueue_Handler,
		},
		{
			MethodName: "DeleteQueue",
			Handler:    _Q_DeleteQueue_Handler,
		},
		{
			MethodName: "AddQueueTag",
			Handler:    _Q_AddQueueTag_Handler,
		},
		{
			MethodName: "DeleteQueueTag",
			Handler:    _Q_DeleteQueueTag_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _Q_Add_Handler,
		},
		{
			MethodName: "Pop",
			Handler:    _Q_Pop_Handler,
		},
		{
			MethodName: "Peek",
			Handler:    _Q_Peek_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "q.proto",
}

func (this *NewQueueRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NewQueueRequest{`,
		`Store:` + fmt.Sprintf("%v", this.Store) + `,`,
		`Limit:` + fmt.Sprintf("%v", this.Limit) + `,`,
		`Tags:` + strings.Replace(fmt.Sprintf("%v", this.Tags), "Tag", "Tag", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NewQueueResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NewQueueResponse{`,
		`Queue:` + strings.Replace(fmt.Sprintf("%v", this.Queue), "Queue", "Queue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetQueueRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetQueueRequest{`,
		`QueueId:` + fmt.Sprintf("%v", this.QueueId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetQueueResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetQueueResponse{`,
		`Queue:` + strings.Replace(fmt.Sprintf("%v", this.Queue), "Queue", "Queue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListQueuesRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListQueuesRequest{`,
		`}`,
	}, "")
	return s
}
func (this *ListQueuesResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListQueuesResponse{`,
		`Queues:` + strings.Replace(fmt.Sprintf("%v", this.Queues), "Queue", "Queue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteQueueRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteQueueRequest{`,
		`QueueId:` + fmt.Sprintf("%v", this.QueueId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteQueueResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteQueueResponse{`,
		`}`,
	}, "")
	return s
}
func (this *AddQueueTagRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddQueueTagRequest{`,
		`QueueId:` + fmt.Sprintf("%v", this.QueueId) + `,`,
		`Tag:` + strings.Replace(fmt.Sprintf("%v", this.Tag), "Tag", "Tag", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddQueueTagResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddQueueTagResponse{`,
		`}`,
	}, "")
	return s
}
func (this *DeleteQueueTagRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteQueueTagRequest{`,
		`QueueId:` + fmt.Sprintf("%v", this.QueueId) + `,`,
		`Tag:` + strings.Replace(fmt.Sprintf("%v", this.Tag), "Tag", "Tag", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteQueueTagResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteQueueTagResponse{`,
		`}`,
	}, "")
	return s
}
func (this *AddRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddRequest{`,
		`QueueId:` + fmt.Sprintf("%v", this.QueueId) + `,`,
		`Message:` + strings.Replace(fmt.Sprintf("%v", this.Message), "NewMessage", "NewMessage", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddResponse{`,
		`Message:` + strings.Replace(fmt.Sprintf("%v", this.Message), "Message", "Message", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PopRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PopRequest{`,
		`QueueId:` + fmt.Sprintf("%v", this.QueueId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PopResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PopResponse{`,
		`Message:` + strings.Replace(fmt.Sprintf("%v", this.Message), "Message", "Message", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PeekRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PeekRequest{`,
		`QueueId:` + fmt.Sprintf("%v", this.QueueId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PeekResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PeekResponse{`,
		`Message:` + strings.Replace(fmt.Sprintf("%v", this.Message), "Message", "Message", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Tag) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Tag{`,
		`Key:` + fmt.Sprintf("%v", this.Key) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Metadata) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Metadata{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Created:` + strings.Replace(fmt.Sprintf("%v", this.Created), "Timestamp", "google_protobuf1.Timestamp", 1) + `,`,
		`Tags:` + strings.Replace(fmt.Sprintf("%v", this.Tags), "Tag", "Tag", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NewMessage) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NewMessage{`,
		`Tags:` + strings.Replace(fmt.Sprintf("%v", this.Tags), "Tag", "Tag", 1) + `,`,
		`Payload:` + fmt.Sprintf("%v", this.Payload) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Message) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Message{`,
		`Meta:` + strings.Replace(fmt.Sprintf("%v", this.Meta), "Metadata", "Metadata", 1) + `,`,
		`Payload:` + fmt.Sprintf("%v", this.Payload) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Queue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Queue{`,
		`Meta:` + strings.Replace(fmt.Sprintf("%v", this.Meta), "Metadata", "Metadata", 1) + `,`,
		`Store:` + fmt.Sprintf("%v", this.Store) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringQ(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}

func init() { proto1.RegisterFile("q.proto", fileDescriptorQ) }
func init() { golang_proto.RegisterFile("q.proto", fileDescriptorQ) }

var fileDescriptorQ = []byte{
	// 875 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcb, 0x6e, 0xe3, 0x54,
	0x18, 0xc7, 0xed, 0xb8, 0x69, 0x3a, 0x5f, 0xaa, 0x5e, 0xbe, 0xd2, 0x99, 0xd4, 0x74, 0x4c, 0x38,
	0x20, 0x88, 0x0a, 0x13, 0x43, 0x41, 0x0c, 0xea, 0xae, 0x88, 0xab, 0x20, 0x69, 0xc6, 0x93, 0x11,
	0x82, 0x0d, 0x3a, 0xad, 0x0f, 0xc6, 0x6a, 0x12, 0x3b, 0xf5, 0xc9, 0x0c, 0x23, 0x84, 0x84, 0x78,
	0x02, 0x24, 0x5e, 0x82, 0xc7, 0x60, 0xc9, 0xb2, 0x12, 0x1b, 0x96, 0x34, 0xc3, 0x82, 0x65, 0x1f,
	0x01, 0xf9, 0x9c, 0xe3, 0x5b, 0x2e, 0x24, 0x95, 0x66, 0x15, 0x7f, 0xb7, 0xff, 0xef, 0x5c, 0x72,
	0xfe, 0x50, 0x19, 0x36, 0xc3, 0x8b, 0x80, 0x07, 0x58, 0x16, 0x3f, 0xe6, 0x3d, 0xcf, 0xe7, 0xdf,
	0x8d, 0x4e, 0x9b, 0x67, 0x41, 0xdf, 0xf6, 0x02, 0x2f, 0xb0, 0x45, 0xfa, 0x74, 0xf4, 0xad, 0x88,
	0x44, 0x20, 0xbe, 0xe4, 0x94, 0xb9, 0xef, 0x05, 0x81, 0xd7, 0x63, 0x36, 0x0d, 0x7d, 0x9b, 0x0e,
	0x06, 0x01, 0xa7, 0xdc, 0x0f, 0x06, 0x91, 0xaa, 0xbe, 0xa4, 0xaa, 0xa9, 0x06, 0xf7, 0xfb, 0x2c,
	0xe2, 0xb4, 0x1f, 0xca, 0x06, 0x32, 0x84, 0xcd, 0x36, 0x7b, 0xf2, 0x60, 0xc4, 0x46, 0xcc, 0x61,
	0xc3, 0x11, 0x8b, 0x38, 0x36, 0xa0, 0x1c, 0xf1, 0xe0, 0x82, 0xd5, 0xf4, 0xba, 0xde, 0xd8, 0x38,
	0x44, 0xd9, 0xd9, 0x14, 0x3d, 0xcd, 0x87, 0x71, 0xc5, 0x91, 0x0d, 0xf8, 0x02, 0x94, 0x7b, 0x7e,
	0xdf, 0xe7, 0xb5, 0x52, 0x5d, 0x6f, 0x18, 0x8e, 0x0c, 0xd0, 0x82, 0x15, 0x4e, 0xbd, 0xa8, 0x66,
	0xd4, 0x8d, 0x46, 0xf5, 0x10, 0xd4, 0x78, 0x97, 0x7a, 0x8e, 0xc8, 0x93, 0xf7, 0x60, 0x2b, 0x43,
	0x46, 0x61, 0x30, 0x88, 0x18, 0x12, 0x28, 0x0f, 0xe3, 0x84, 0x60, 0x56, 0x0f, 0xd7, 0xf3, 0x4c,
	0x47, 0x96, 0xc8, 0x9b, 0xb0, 0xf9, 0x09, 0xe3, 0x85, 0xa5, 0xee, 0xc1, 0x9a, 0xa8, 0x7d, 0xe3,
	0xbb, 0x62, 0xf2, 0x96, 0x53, 0x11, 0xf1, 0x67, 0x6e, 0x4c, 0xc9, 0xba, 0x6f, 0x40, 0xd9, 0x81,
	0xed, 0x2f, 0xfc, 0x48, 0x0e, 0x46, 0x8a, 0x43, 0x8e, 0x00, 0xf3, 0x49, 0x25, 0xf7, 0x2a, 0xac,
	0x8a, 0x99, 0xa8, 0xa6, 0x8b, 0xad, 0x16, 0xf5, 0x54, 0x8d, 0xd8, 0x80, 0x1f, 0xb2, 0x1e, 0xe3,
	0x6c, 0xd9, 0x95, 0xef, 0xc2, 0x4e, 0x61, 0x40, 0xd2, 0x48, 0x0b, 0xf0, 0xd8, 0x75, 0x45, 0x2e,
	0x3e, 0xcb, 0x85, 0x3a, 0xb8, 0x0f, 0x06, 0xa7, 0x9e, 0xb8, 0x9b, 0xe2, 0x35, 0xc4, 0xe9, 0x98,
	0x52, 0x90, 0x53, 0x94, 0x0e, 0xec, 0xe6, 0xe0, 0xcf, 0x03, 0x54, 0x83, 0xdb, 0x93, 0x8a, 0x8a,
	0xd5, 0x05, 0x38, 0x76, 0xdd, 0x25, 0x00, 0x6f, 0x40, 0xa5, 0xcf, 0xa2, 0x88, 0x7a, 0x4c, 0x41,
	0xb6, 0x15, 0xa4, 0xcd, 0x9e, 0xb4, 0x64, 0xc1, 0x49, 0x3a, 0xc8, 0x7d, 0xa8, 0x0a, 0x55, 0x75,
	0x49, 0x8d, 0x6c, 0x56, 0xde, 0xfa, 0x86, 0x9a, 0x9d, 0x1a, 0x7c, 0x1d, 0xa0, 0x13, 0x84, 0x4b,
	0x5c, 0xd0, 0x7d, 0xa8, 0x8a, 0xc6, 0x1b, 0x13, 0x1a, 0x50, 0xed, 0x30, 0x76, 0xbe, 0x04, 0xe2,
	0x7d, 0x58, 0x97, 0x9d, 0x37, 0x66, 0xdc, 0x03, 0xa3, 0x4b, 0x3d, 0xdc, 0x02, 0xe3, 0x9c, 0x3d,
	0x55, 0xb2, 0xf1, 0x67, 0xfc, 0x58, 0x1f, 0xd3, 0xde, 0x48, 0x1e, 0xe1, 0x2d, 0x47, 0x06, 0x24,
	0x84, 0xb5, 0x16, 0xe3, 0xd4, 0xa5, 0x9c, 0xe2, 0x06, 0x94, 0xd2, 0x95, 0x94, 0x7c, 0x17, 0xdf,
	0x85, 0xca, 0xd9, 0x05, 0xa3, 0x9c, 0xb9, 0xea, 0xd8, 0xcd, 0xa6, 0xb4, 0x93, 0x66, 0x62, 0x27,
	0xcd, 0x6e, 0x62, 0x27, 0x4e, 0xd2, 0xba, 0xf0, 0xf9, 0x7f, 0x0c, 0x90, 0x5d, 0x5b, 0xda, 0xad,
	0xcf, 0xee, 0xc6, 0x1a, 0x54, 0x42, 0xfa, 0xb4, 0x17, 0x50, 0xb9, 0x86, 0x75, 0x27, 0x09, 0xc9,
	0xa7, 0x50, 0x49, 0x44, 0x5e, 0x81, 0x95, 0x3e, 0xe3, 0x54, 0x1d, 0xcd, 0x66, 0x7a, 0x34, 0x72,
	0x5f, 0x8e, 0x28, 0xfe, 0x8f, 0xd2, 0xf7, 0x50, 0x16, 0xff, 0xcd, 0xe5, 0x74, 0x52, 0x7b, 0x2c,
	0x2d, 0xb0, 0x47, 0x52, 0x87, 0xb2, 0x88, 0xb1, 0x0a, 0x95, 0x47, 0xed, 0xcf, 0xdb, 0x27, 0x5f,
	0xb6, 0xb7, 0x34, 0x04, 0x58, 0x6d, 0x7d, 0xd4, 0x3a, 0x71, 0xbe, 0xda, 0xd2, 0x0f, 0x2f, 0x57,
	0x41, 0x7f, 0x80, 0x8f, 0x00, 0x32, 0x77, 0xc1, 0x9a, 0x12, 0x9c, 0x72, 0x21, 0x73, 0x6f, 0x46,
	0x45, 0x3d, 0x25, 0xfc, 0xf9, 0xcf, 0x7f, 0x7e, 0x2d, 0xad, 0x23, 0xd8, 0x8f, 0xdf, 0xb6, 0xa5,
	0xf1, 0xa0, 0x03, 0x6b, 0x89, 0xcf, 0xe2, 0xed, 0xec, 0xc1, 0xe4, 0x6d, 0xc8, 0xbc, 0x33, 0x95,
	0x57, 0x82, 0xbb, 0x42, 0x70, 0x93, 0xe4, 0x04, 0x8f, 0xf4, 0x03, 0xfc, 0x1a, 0xd6, 0x12, 0x57,
	0x4d, 0x35, 0x27, 0x4c, 0x39, 0xd5, 0x9c, 0xb4, 0x5f, 0x72, 0x57, 0x68, 0xde, 0xc1, 0xdd, 0x4c,
	0xd3, 0xfe, 0x21, 0x79, 0x01, 0x3f, 0xe2, 0x19, 0x54, 0x73, 0x46, 0x81, 0xc9, 0x6e, 0xa7, 0xcd,
	0xd3, 0x34, 0x67, 0x95, 0x8a, 0x90, 0x83, 0x39, 0x90, 0x9e, 0x70, 0x87, 0xc4, 0x8a, 0x52, 0xc8,
	0xb4, 0xb3, 0xa6, 0x90, 0x59, 0x2e, 0xf9, 0x9a, 0x80, 0xd4, 0xc9, 0xde, 0x4c, 0x88, 0xcd, 0xa9,
	0x77, 0x14, 0x7b, 0x1f, 0x8e, 0x60, 0xa3, 0xe8, 0x7d, 0xb8, 0x3f, 0xbd, 0xf4, 0x1c, 0xf3, 0xee,
	0x9c, 0x6a, 0x11, 0x7b, 0xb0, 0x08, 0xdb, 0x05, 0xe3, 0xd8, 0x75, 0x71, 0x3b, 0xdb, 0x41, 0x02,
	0xc0, 0x7c, 0x6a, 0x62, 0x33, 0xb3, 0x4f, 0xec, 0x28, 0x71, 0x16, 0x3c, 0x01, 0xa3, 0x13, 0x84,
	0xa9, 0x6a, 0xe6, 0x95, 0xa9, 0x6a, 0xce, 0x15, 0xc9, 0xcb, 0x42, 0xf5, 0x45, 0x9c, 0xb3, 0xd6,
	0x30, 0x08, 0xf1, 0x21, 0xac, 0xc4, 0x26, 0x87, 0xe9, 0x78, 0xe6, 0x8d, 0xe6, 0x4e, 0x21, 0xa7,
	0x34, 0x89, 0xd0, 0xdc, 0x47, 0x73, 0x8e, 0x26, 0x63, 0xe7, 0x1f, 0xbc, 0x75, 0x79, 0x65, 0x69,
	0x7f, 0x5d, 0x59, 0xda, 0xf5, 0x95, 0xa5, 0xff, 0x34, 0xb6, 0xf4, 0xdf, 0xc6, 0x96, 0xf6, 0xc7,
	0xd8, 0xd2, 0x2e, 0xc7, 0x96, 0xf6, 0xf7, 0xd8, 0xd2, 0xfe, 0x1d, 0x5b, 0xda, 0xf5, 0xd8, 0xd2,
	0x7f, 0x79, 0x66, 0x69, 0xbf, 0x3f, 0xb3, 0xf4, 0xd3, 0x55, 0x41, 0x7a, 0xe7, 0xbf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x56, 0x11, 0x53, 0xc5, 0x89, 0x09, 0x00, 0x00,
}
